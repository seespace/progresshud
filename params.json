{"name":"ProgressHUD","tagline":"ProgressHUD is a lightweight and easy-to-use HUD for InAiR.","body":"# ProgressHUD #\r\n\r\n[![Build Status](https://travis-ci.org/seespace/progresshud.svg?branch=develop)](https://travis-ci.org/seespace/progresshud)\r\n\r\nProgressHUD is a lightweight and easy-to-use HUD for InAiR.\r\n\r\n### Download ###\r\n\r\nDownload the latest [AAR](https://raw.githubusercontent.com/seespace/maven/master/co/seespace/extra/progresshud/1.0.1/progresshud-1.0.1.aar) or grab via Gradle:\r\n\r\n```groovy\r\nrepositories {\r\n  maven {\r\n    url \"https://raw.githubusercontent.com/seespace/maven/master/\"\r\n  }\r\n}\r\n\r\ndependencies {\r\n  compile 'co.seespace.extra:progresshud:1.0.1'\r\n}\r\n```\r\n\r\nor Maven:\r\n\r\n```xml\r\n<!-- repository -->\r\n<repositories>\r\n  <repository>\r\n    <id>seespace-mvn-repo</id>\r\n    <url>https://raw.githubusercontent.com/seespace/maven/master/</url>\r\n    <snapshots>\r\n      <enabled>true</enabled>\r\n      <updatePolicy>always</updatePolicy>\r\n    </snapshots>\r\n  </repository>\r\n</repositories>\r\n\r\n<!-- dependency -->\r\n<dependency>\r\n  <groupId>co.seespace.extra</groupId>\r\n  <artifactId>progresshud</artifactId>\r\n  <version>1.0.1</version>\r\n</dependency>\r\n```\r\n\r\n### Usage ###\r\n\r\n#### Show a single loader indicator ####\r\n\r\n```java\r\nUIProgressHUD.with(context)\r\n  .show();\r\n```\r\n\r\n#### Show loader indicator with a message ####\r\n\r\n```java\r\nUIProgressHUD.with(context)\r\n  .show(\"Logging In…\");\r\n```\r\n\r\nAlternatively, you can use [Android String Resources](http://developer.android.com/guide/topics/resources/string-resource.html):\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n  <string name=\"logging_in\">Logging In…</string>\r\n</resources>\r\n```\r\n\r\n```java\r\nUIProgressHUD.with(context)\r\n  .show(R.string.logging_in);\r\n```\r\n\r\n#### Show custom Drawable ####\r\n\r\n```java\r\nDrawable customIndicator;\r\nUIProgressHUD.with(context)\r\n  .show(customIndicator);\r\n```\r\n\r\nUse [Android Drawable Resources](http://developer.android.com/guide/topics/resources/drawable-resource.html) instead:\r\n\r\n```java\r\nUIProgressHUD.with(context)\r\n  .show(R.drawable.loadingIndicator);\r\n```\r\n\r\n#### Show custom Drawable with custom message ####\r\n\r\nEasy, as you might guess:\r\n\r\n```java\r\nUIProgressHUD.with(context)\r\n  .show(R.drawable.loadingIndicator, R.string.logging_in);\r\n```\r\n\r\n#### Show success or error ####\r\n\r\n```java\r\nUIProgressHUD.with(context)\r\n  .showSuccess(\"Done\");\r\n```\r\n\r\n```java\r\nUIProgressHUD.with(context)\r\n  .showError(R.string.error_message);\r\n```\r\n\r\n#### Dissmissing ####\r\n\r\nSimply call `dissmiss()`\r\n\r\n```java\r\nUIProgressHUD.with(context)\r\n  .dismiss();\r\n```\r\n\r\n**Note**: Unless you set a timeout, the HUD never get dismissed. You have to explicitly call `dissmiss()`.\r\n\r\n### Advanced Usage ###\r\n\r\n#### HUD timeout ####\r\n\r\nThis snippet code will show \"Hello\" in 3 seconds then automatically dismiss.\r\n\r\n```java\r\nUIProgressHUD.with(context)\r\n  .show(\"Hello\")\r\n  .in(3000);\r\n```\r\n\r\n#### Chain HUDs together ####\r\n\r\nThis will show `\"Hello\"` in 3 seconds then show `\"I'm ProgressHUD\"` in 1 second then finally dismiss.\r\n\r\n```java\r\nUIProgressHUD.with(context)\r\n  .show(\"Hello\")\r\n  .in(3000)\r\n  .then()\r\n  .show(\"I'm ProgressHUD\")\r\n  .in(1000);\r\n```\r\n\r\n**Note**: You can use as many `show()`, `in()`, `then()` as possible.\r\n\r\n### Supports ###\r\n\r\n* Bug reporting: file an issue in this repo\r\n* Discussions/questions: create new topic at [InAiR Developer Forums](https://developer.inair.tv)\r\n\r\n### License ###\r\n\r\nThe MIT License\r\n\r\nCopyright (c) 2014, SeeSpace. All rights reserved.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}